{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\src\\\\components\\\\DataBody\\\\DataBody.js\";\n///Importing to let react work/////\nimport React from 'react';\nimport \"../DataBody/style.css\"; ////Create a DataBody fucntion to see what we want specifcally in the data///\n\nfunction DataBody(_ref) {\n  var _this = this;\n\n  var users = _ref.users;\n\n  function formatDate(date) {\n    var dateArray = date.split(\"-\");\n    var year = dateArray[0];\n    var month = dateArray[1];\n    var dayArray = dateArray[2].split(\"T\");\n    var day = dayArray[0];\n    var formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  } ///Retruning the table of employees being generated from the API into HTML format///\n\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, users[0] !== undefined && users[0].name !== undefined ? ///using users.map to say these are the elements that are going to be returned when they login, the name,phone, email, and DOB////\n  users.map(function (_ref2) {\n    var login = _ref2.login,\n        name = _ref2.name,\n        picture = _ref2.picture,\n        phone = _ref2.phone,\n        email = _ref2.email,\n        dob = _ref2.dob;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: login.uuid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      \"data-th\": \"Image\",\n      className: \"align-middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: picture.medium,\n      alt: \"profile image for \" + name.first + \" \" + name.last,\n      className: \"img-responsive\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      \"data-th\": \"Name\",\n      className: \"name-cell align-middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, name.first, \" \", name.last), /*#__PURE__*/React.createElement(\"td\", {\n      \"data-th\": \"Phone\",\n      className: \"align-middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, phone), /*#__PURE__*/React.createElement(\"td\", {\n      \"data-th\": \"Email\",\n      className: \"align-middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"mailto:\" + email,\n      target: \"__blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, email)), /*#__PURE__*/React.createElement(\"td\", {\n      \"data-th\": \"DOB\",\n      className: \"align-middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, formatDate(dob.date)));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}\n\nexport default DataBody;","map":{"version":3,"sources":["C:/Users/joshu/Employee-Directory/employee-app/src/components/DataBody/DataBody.js"],"names":["React","DataBody","users","formatDate","date","dateArray","split","year","month","dayArray","day","formattedDate","join","undefined","name","map","login","picture","phone","email","dob","uuid","medium","first","last"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP,C,CAEA;;AACA,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AACzB,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,QAAMC,IAAI,GAAGF,SAAS,CAAC,CAAD,CAAtB;AACA,QAAMG,KAAK,GAAGH,SAAS,CAAC,CAAD,CAAvB;AACA,QAAMI,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmB,GAAnB,CAAjB;AACA,QAAMI,GAAG,GAAGD,QAAQ,CAAC,CAAD,CAApB;AACA,QAAME,aAAa,GAAG,CAACH,KAAD,EAAQE,GAAR,EAAaH,IAAb,EAAmBK,IAAnB,CAAwB,GAAxB,CAAtB;AACA,WAAOD,aAAP;AACH,GATwB,CAYzB;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAAC,CAAD,CAAL,KAAaW,SAAb,IAA0BX,KAAK,CAAC,CAAD,CAAL,CAASY,IAAT,KAAkBD,SAA5C,GACG;AACAX,EAAAA,KAAK,CAACa,GAAN,CAAU,iBAAiD;AAAA,QAA9CC,KAA8C,SAA9CA,KAA8C;AAAA,QAAvCF,IAAuC,SAAvCA,IAAuC;AAAA,QAAjCG,OAAiC,SAAjCA,OAAiC;AAAA,QAAxBC,KAAwB,SAAxBA,KAAwB;AAAA,QAAjBC,KAAiB,SAAjBA,KAAiB;AAAA,QAAVC,GAAU,SAAVA,GAAU;AACvD,wBACI;AAAI,MAAA,GAAG,EAAEJ,KAAK,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,iBAAQ,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,GAAG,EAAEJ,OAAO,CAACK,MADjB;AAEI,MAAA,GAAG,EAAE,uBAAuBR,IAAI,CAACS,KAA5B,GAAoC,GAApC,GAA0CT,IAAI,CAACU,IAFxD;AAGI,MAAA,SAAS,EAAC,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAQI;AAAI,iBAAQ,MAAZ;AAAmB,MAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,IAAI,CAACS,KADV,OACkBT,IAAI,CAACU,IADvB,CARJ,eAWI;AAAI,iBAAQ,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KADL,CAXJ,eAcI;AAAI,iBAAQ,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,IAAI,EAAE,YAAYC,KAArB;AAA4B,MAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KADL,CADJ,CAdJ,eAmBI;AAAI,iBAAQ,KAAZ;AAAkB,MAAA,SAAS,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,UAAU,CAACiB,GAAG,CAAChB,IAAL,CADf,CAnBJ,CADJ;AAyBH,GA1BD,CAFH,gBA8BO,yCA/BZ,CADJ;AAsCH;;AACD,eAAeH,QAAf","sourcesContent":["///Importing to let react work/////\r\nimport React from 'react'\r\nimport \"../DataBody/style.css\";\r\n\r\n////Create a DataBody fucntion to see what we want specifcally in the data///\r\nfunction DataBody({ users }) {\r\n    function formatDate(date) {\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate = [month, day, year].join(\"-\")\r\n        return formattedDate;\r\n    }\r\n\r\n\r\n    ///Retruning the table of employees being generated from the API into HTML format///\r\n    return (\r\n        <tbody>\r\n            {users[0] !== undefined && users[0].name !== undefined ? (\r\n                ///using users.map to say these are the elements that are going to be returned when they login, the name,phone, email, and DOB////\r\n                users.map(({ login, name, picture, phone, email, dob }) => {\r\n                    return (\r\n                        <tr key={login.uuid}>\r\n                            <td data-th=\"Image\" className=\"align-middle\">\r\n                                <img\r\n                                    src={picture.medium}\r\n                                    alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                                    className=\"img-responsive\"\r\n                                />\r\n                            </td>\r\n                            <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                                {name.first} {name.last}\r\n                            </td>\r\n                            <td data-th=\"Phone\" className=\"align-middle\">\r\n                                {phone}\r\n                            </td>\r\n                            <td data-th=\"Email\" className=\"align-middle\">\r\n                                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                    {email}\r\n                                </a>\r\n                            </td>\r\n                            <td data-th=\"DOB\" className=\"align-middle\">\r\n                                {formatDate(dob.date)}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            ) : (\r\n                    <></>\r\n\r\n                )}\r\n        </tbody>\r\n    );\r\n\r\n}\r\nexport default DataBody;\r\n\r\n"]},"metadata":{},"sourceType":"module"}