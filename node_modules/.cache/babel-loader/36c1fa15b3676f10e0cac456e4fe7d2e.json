{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\src\\\\components\\\\DataArea\\\\DataArea.js\";\n///To make sure the DataArea is rendering, we are taking imporing th eNavbar, API, and the Datatable from the components folder///\nimport React, { Component } from 'react';\nimport DataTable from \"../DataTable/DataTable.js\";\nimport NavBar from \"../Navbar/NavBar.js\";\nimport API from \"/Users/joshu/Employee-Directory/employee-app/src/utils/API\";\nimport \"../DataArea/style.css\"; ////Extending the DataArea as a clas from the component folder////\n\nvar DataArea = /*#__PURE__*/function (_Component) {\n  _inherits(DataArea, _Component);\n\n  ////Created a constructor to specify for the class for the state what we want to retireve. In this case its the image, name, email, phone, DOB////\n  function DataArea() {\n    var _this;\n\n    _classCallCheck(this, DataArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataArea).call(this));\n    _this.state = {\n      users: [{}],\n      order: \"descend\",\n      filteredUsers: [{}],\n      heading: [{\n        name: \"Image\",\n        width: \"20%\"\n      }, {\n        name: \"Name\",\n        width: \"20%\"\n      }, {\n        name: \"Phone\",\n        width: \"20%\"\n      }, {\n        name: \"Email\",\n        width: \"20%\"\n      }, {\n        name: \"DOB\",\n        width: \"20%\"\n      }],\n      handleSort: function handleSort(heading) {\n        if (_this.state.order === 'descend') {\n          _this.setState({\n            order: \"ascend\"\n          });\n        } else {\n          _this.setState({\n            order: \"descend\"\n          });\n        } ////If there is information missign from the account  we are going to use\n        /// an conditiional to the heading as 1 oe -1 if there is an undefined////\n\n\n        var compareValues = function compareValues(a, b) {\n          if (_this.state.order === \"ascend\") {\n            ///Keep track of the files that are missing////\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } else if (heading === \"name\") {\n              return a[heading].first.localCompare(b[heading].first);\n            } else {\n              return a[heading] - b[heading];\n            }\n          } else {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } else if (heading === \"name\") {\n              return b[heading].first.localCompare(a[heading].first);\n            } else {\n              return b[heading] - a[heading];\n            }\n          }\n        }; ///Filtering the users in the database////\n\n\n        var sortedUsers = _this.state.filteredUsers.sort(compareValues);\n\n        _this.setState({\n          filteredUsers: sortedUsers\n        });\n      },\n      ////Create a handleSearchChange Event to handle the filtr a list that was sorted or not sorted///\n      handleSearchChange: function handleSearchChange(event) {\n        console.log(event.target.value);\n        var filter = event.target.value;\n\n        var filteredList = _this.state.users.filter(function (item) {\n          ////Merge the value and the object together////\n          var values = Object.values(item).join('').toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n\n        _this.state({\n          filteredUsers: filteredList\n        });\n      }\n    };\n    return _this;\n  } ////Calling Axios to retireve the data/////\n\n\n  _createClass(DataArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getUsers().then(function (results) {\n        _this2.setState({\n          users: results.data.results,\n          filteredUsers: results.data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n        handleSearchChange: this.state.handleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"data-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        headings: this.state.headings,\n        users: this.state.filteredUsers,\n        handleSort: this.state.handleSort,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return DataArea;\n}(Component);\n\nexport { DataArea as default };","map":{"version":3,"sources":["C:/Users/joshu/Employee-Directory/employee-app/src/components/DataArea/DataArea.js"],"names":["React","Component","DataTable","NavBar","API","DataArea","state","users","order","filteredUsers","heading","name","width","handleSort","setState","compareValues","a","b","undefined","first","localCompare","sortedUsers","sort","handleSearchChange","event","console","log","target","value","filter","filteredList","item","values","Object","join","toLowerCase","indexOf","getUsers","then","results","data","headings"],"mappings":"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","sourcesContent":["///To make sure the DataArea is rendering, we are taking imporing th eNavbar, API, and the Datatable from the components folder///\r\nimport React, { Component } from 'react';\r\nimport DataTable from \"../DataTable/DataTable.js\";\r\nimport NavBar from \"../Navbar/NavBar.js\";\r\nimport API from \"/Users/joshu/Employee-Directory/employee-app/src/utils/API\";\r\nimport \"../DataArea/style.css\";\r\n////Extending the DataArea as a clas from the component folder////\r\nexport default class DataArea extends Component{\r\n ////Created a constructor to specify for the class for the state what we want to retireve. In this case its the image, name, email, phone, DOB////\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [{}],\r\n            order: \"descend\",\r\n            filteredUsers:[{}],\r\n            heading: [\r\n                {name: \"Image\", width: \"20%\"},\r\n                {name: \"Name\", width: \"20%\"},\r\n                {name: \"Phone\", width: \"20%\"},\r\n                {name: \"Email\", width: \"20%\"},\r\n                {name: \"DOB\", width: \"20%\"},\r\n            ],\r\n            handleSort: heading => {\r\n                if( this.state.order === 'descend') {\r\n                    this.setState({\r\n                        order: \"ascend\"\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        order: \"descend\"\r\n                    })\r\n                }\r\n                ////If there is information missign from the account  we are going to use\r\n                /// an conditiional to the heading as 1 oe -1 if there is an undefined////\r\n\r\n                const compareValues = (a,b) => {\r\n                    if (this.state.order === \"ascend\"){\r\n                    ///Keep track of the files that are missing////\r\n                    if (a[heading] === undefined) {\r\n                        return 1;\r\n                    }else if(b[heading] === undefined) {\r\n                        return -1;\r\n                    }else if (heading === \"name\") {\r\n                    return a[heading].first.localCompare(b[heading].first);\r\n                    }else {\r\n                        return a[heading] -  b[heading];\r\n                    }\r\n                    }else {\r\n                        if (a[heading]=== undefined) {\r\n                            return 1;\r\n                        }else if (b[heading] === undefined){\r\n                            return -1;\r\n                        }\r\n                        else if (heading === \"name\") {\r\n                            return b[heading].first.localCompare(a[heading].first);\r\n                        }else { \r\n                            return b[heading] -a[heading];\r\n                        }\r\n                        }\r\n                    }\r\n                    ///Filtering the users in the database////\r\n                    const sortedUsers = this.state.filteredUsers.sort(compareValues);\r\n                    this.setState({filteredUsers:sortedUsers});\r\n                },\r\n                ////Create a handleSearchChange Event to handle the filtr a list that was sorted or not sorted///\r\n                handleSearchChange: event => {\r\n                    console.log(event.target.value);\r\n                    const filter = event.target.value;\r\n                    const filteredList = this.state.users.filter(item => {\r\n                        ////Merge the value and the object together////\r\n                        let values = Object.values(item)\r\n                        .join('')\r\n                        .toLowerCase();\r\n                        return values.indexOf(filter.toLowerCase()) !== -1;\r\n                    });\r\n                    this.state({filteredUsers: filteredList});\r\n\r\n                }\r\n\r\n            };\r\n        }\r\n        ////Calling Axios to retireve the data/////\r\n        componentDidMount() {\r\n            API.getUsers().then(results => {\r\n                this.setState({\r\n                    users:results.data.results,\r\n                    filteredUsers:results.data.results\r\n                });\r\n            });\r\n        }\r\n        render() {\r\n            return (\r\n                <>\r\n                <NavBar handleSearchChange={this.state.handleSearchChange} />\r\n                <div className=\"data-area\">\r\n                    <DataTable\r\n                    headings={this.state.headings}\r\n                    users={this.state.filteredUsers}\r\n                    handleSort={this.state.handleSort}\r\n                    />\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n        \r\n    }\r\n"]},"metadata":{},"sourceType":"module"}