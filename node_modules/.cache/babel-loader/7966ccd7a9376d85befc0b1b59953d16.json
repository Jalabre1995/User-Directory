{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Employee-Directory\\\\employee-app\\\\src\\\\components\\\\DataArea\\\\DataArea.js\";\n///To make sure the DataArea is rendering, we are taking imporing th eNavbar, API, and the Datatable from the components folder///\nimport React, { Component } from 'react';\nimport SearchBox from \"../SearchBox/SearchBox.js\";\nimport DataTable from \"../DataTable/DataTable.js\";\nimport API from \"/Users/joshu/Employee-Directory/employee-app/src/utils/API.js\";\nimport \"./style.css\"; ////Extending the DataArea as a clas from the component folder////\n\nvar DataArea = /*#__PURE__*/function (_Component) {\n  _inherits(DataArea, _Component);\n\n  function DataArea() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      employees: [],\n      filteredEmployees: [],\n      order: \"\"\n    };\n\n    _this.sortByName = function () {\n      var filter = _this.state.filteredEmployees;\n\n      if (_this.state.order === 'ascending') {\n        var sorteds = filter.sort(function (a, b) {\n          return a.name.first > b.name.first ? 1 : -1;\n        });\n        console.log(sorteds);\n\n        _this.state({\n          filteredEmployees: sorteds,\n          order: 'descending'\n        });\n      } else {\n        var _sorteds = filter.sort(function (a, b) {\n          return a.name.first > b.name.first ? -1 : 1;\n        });\n\n        console.log(_sorteds);\n\n        _this.setState({\n          filteredEmployees: _sorteds,\n          order: 'ascending'\n        });\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      var employees = _this.state.employees;\n      var UserInput = event.target.value;\n      var filteredEmployees = employees.filter(function (employee) {\n        return employee.name.first.toLowerCase().indexOf(UserInput.toLowerCase());\n      });\n\n      _this.setState({\n        ///Change the state of the filteredEmployees////\n        filteredEmployees: filteredEmployees\n      });\n    };\n\n    _this.employeeSearch = function () {\n      API.getUsers().then(function (response) {\n        return _this.setState({\n          ///Going to use props to keep the employee will remain the same but the filteresd Employee will change based ont he input from the user///\n          filteredEmployees: response.data.results,\n          employees: response.data.results\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleSearch = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.search) {\n        alert(\"Enter a name\");\n      }\n\n      var _this$state = _this.state,\n          employees = _this$state.employees,\n          search = _this$state.search; ///Object is filtered through what the user puts in///\n\n      var filteredEmployees = employees.filter(function (employee) {\n        return employee.name.first.toLowerCase().includes(search.toLowerCase());\n      });\n\n      _this.state({\n        filteredEmployees: filteredEmployees\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DataArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getUsers().then(function (results) {\n        return _this2.setState({\n          employees: results.data.results,\n          filteredEmployees: results.data.results\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } ///if the employees i clicked then they are picked by ascending and descending ordere///\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SearchBox, {\n        employee: this.state.employees,\n        handleSearch: this.handleSearch,\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(DataTable, {\n        results: this.state.filteredEmployees,\n        sortByName: this.sortByName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      }));\n    }\n  }]);\n\n  return DataArea;\n}(Component);\n\nexport default DataArea;","map":{"version":3,"sources":["C:/Users/joshu/Employee-Directory/employee-app/src/components/DataArea/DataArea.js"],"names":["React","Component","SearchBox","DataTable","API","DataArea","state","search","employees","filteredEmployees","order","sortByName","filter","sorteds","sort","a","b","name","first","console","log","setState","handleInputChange","event","UserInput","target","value","employee","toLowerCase","indexOf","employeeSearch","getUsers","then","response","data","results","catch","err","handleSearch","preventDefault","alert","includes"],"mappings":"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","sourcesContent":["///To make sure the DataArea is rendering, we are taking imporing th eNavbar, API, and the Datatable from the components folder///\r\nimport React, { Component } from 'react';\r\nimport SearchBox from \"../SearchBox/SearchBox.js\";\r\nimport DataTable from \"../DataTable/DataTable.js\";\r\nimport API from \"/Users/joshu/Employee-Directory/employee-app/src/utils/API.js\";\r\nimport \"./style.css\"\r\n////Extending the DataArea as a clas from the component folder////\r\nclass DataArea extends Component{\r\n    ///The search starts as a empty string and employees and fileted employees are empty \r\n    state ={\r\n        search: \"\",\r\n        employees: [],\r\n        filteredEmployees: [],\r\n        order: \"\"\r\n    };\r\n    componentDidMount() {\r\n        API.getUsers().then(results => this.setState({\r\n            employees: results.data.results,\r\n                filteredEmployees: results.data.results\r\n            })).catch(err => console.log(err));\r\n        }\r\n\r\n        ///if the employees i clicked then they are picked by ascending and descending ordere///\r\n        sortByName = () => {\r\n            const filter = this.state.filteredEmployees;\r\n            if(this.state.order === 'ascending') {\r\n                const sorteds = filter.sort((a,b) => (a.name.first> b.name.first) ? 1: -1)\r\n                console.log(sorteds);\r\n                this.state({\r\n                    filteredEmployees:sorteds,\r\n                    order: 'descending'\r\n                })\r\n            }else{\r\n                const sorteds = filter.sort ((a,b) => (a.name.first> b.name.first) ? -1: 1);\r\n                console.log(sorteds)\r\n                this.setState({\r\n                    filteredEmployees: sorteds,\r\n                    order: 'ascending'\r\n                })\r\n            }\r\n        } \r\n          ///Goint to put a handleInputChnage event to make the employees show when the input changes////\r\n          handleInputChange = event => {\r\n              const employees = this.state.employees;\r\n              const UserInput = event.target.value;\r\n              const filteredEmployees=employees.filter(employee=> employee.name.first.toLowerCase().indexOf(UserInput.toLowerCase())\r\n              )\r\n              this.setState({\r\n                  ///Change the state of the filteredEmployees////\r\n                filteredEmployees,\r\n              });\r\n          };\r\n          /////API is called when the page is refreshed////\r\n          employeeSearch=() => {\r\n              API.getUsers()\r\n              .then(response => this.setState({\r\n\r\n            ///Going to use props to keep the employee will remain the same but the filteresd Employee will change based ont he input from the user///\r\n            filteredEmployees:response.data.results,\r\n            employees: response.data.results\r\n\r\n              }))\r\n              .catch(err => console.log(err));\r\n          }\r\n          ////When the button is clicked the state from fitetred employee will change///\r\n          handleSearch = event => {\r\n              event.preventDefault();\r\n              if(!this.state.search) {\r\n                  alert(\"Enter a name\")\r\n              }\r\n              const {employees, search} =this.state;\r\n              ///Object is filtered through what the user puts in///\r\n              const filteredEmployees = employees.filter(employee => employee.name.first.toLowerCase().includes(search.toLowerCase()));\r\n\r\n              this.state({\r\n                  filteredEmployees\r\n              });\r\n\r\n          }\r\n          render() {\r\n              return (\r\n                  <div>\r\n                      <SearchBox\r\n                      employee={this.state.employees}\r\n                      handleSearch ={this.handleSearch}\r\n                      handleInputChange={this.handleInputChange} />\r\n                      <DataTable results= {this.state.filteredEmployees}\r\n                      sortByName={this.sortByName}\r\n                      />\r\n                  </div>\r\n              )\r\n          }\r\n    }\r\n\r\n\r\n    export default DataArea"]},"metadata":{},"sourceType":"module"}